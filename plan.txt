Input
> Prompt
Select a codebase
> [select from computer] or [select from github]

It creates a local git repo that is a clone of the codebase

Using the codebase - finetune based on previous commits

It creates a map of the files to change/add/remove
Checkout a branch, go file by file with what was referenced in the map
Show the git diff to the user

Describe the changes

Button to create pr or branch? Or change the local files



Making the backend work solid:
- Use gpt-3 to make good suggestions.
  - First try without training our own model.
  - Give davinci the high level of the task and the folder structure. Ask it to do the mapping.
    - Does the code edit cover everything? Should we use davinci model?
    - How do we give the model the full context of the app.
    - How do we let the model create new files or delete, etc.
      - High level mapping first? Make it plan it.
  - chat gpt api
- Integrate with git:
  - Create a new git branch, copy into a temp folder
  - Rebuild the current git folder off of the 
  - If it's not already git we do a git init so we can do a diff.

How will the git integration work:
- Create a new branch
- Create a temp folder
  - Down the line maybe all the diff happens in that temp folder and its git
- Build the new files in the temp folder?
  - Should the ai be giving modifications? Or create new files.

Maybe:
- Show the ai how to do one step, then repeat that for x files in the repo.
  EX: Getting rid of sass and moving to css in js.
- Ask it for information about the codebase
- Train our own model.
- Basic examples.
- Tester project
- Server to handle requests and manage api usage. Publish demo (github link only then?).
